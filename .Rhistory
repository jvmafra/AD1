menor_valor = agrupa_nome %>% filter(total == min(total))
View(maior_valor) #deputado que mais gastou
View(menor_valor) #deputado que menos gastou
View(mean(gastos$Valor_liquido)) #O que cada deputado gasta em média para cada servico solicitado
agrupa_nome = gastos %>%
group_by(Nome) %>%
summarise(total = sum(Valor_liquido))
ggplot(agrupa_nome) +
geom_point(mapping = aes(x = Nome, y = total)) + coord_flip()
View(mean(agrupa_nome$total)) # Em media, quanto os deputados gastam?
ggplot(agrupa_nome) +
geom_histogram(mapping = aes(x = Descricao)) + coord_flip()
maior_valor = agrupa_nome %>% filter(total == max(total))
menor_valor = agrupa_nome %>% filter(total == min(total))
View(maior_valor) #deputado que mais gastou
View(menor_valor) #deputado que menos gastou
View(mean(gastos$Valor_liquido)) #O que cada deputado gasta em média para cada servico solicitado
agrupa_nome = gastos %>%
group_by(Nome) %>%
summarise(total = sum(Valor_liquido))
ggplot(agrupa_nome) +
geom_point(mapping = aes(x = Nome, y = total)) + coord_flip()
View(mean(agrupa_nome$total)) # Em media, quanto os deputados gastam?
maior_valor = agrupa_nome %>% filter(total == max(total))
menor_valor = agrupa_nome %>% filter(total == min(total))
View(maior_valor) #deputado que mais gastou
View(menor_valor) #deputado que menos gastou
View(mean(gastos$Valor_liquido)) #O que cada deputado gasta em média para cada servico solicitado
agrupa_nome = gastos %>%
group_by(Nome) %>%
summarise(total = sum(Valor_liquido))
ggplot(agrupa_nome) +
geom_point(mapping = aes(x = Nome, y = total)) + coord_flip()
View(mean(agrupa_nome$total)) # Em media, quanto os deputados gastam?
maior_valor = agrupa_nome %>% filter(total == max(total))
menor_valor = agrupa_nome %>% filter(total == min(total))
View(maior_valor) #deputado que mais gastou
View(menor_valor) #deputado que menos gastou
View(mean(gastos$Valor_liquido)) #O que cada deputado gasta em média para cada servico solicitado
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
theme_set(theme_bw())
# carregando dados
ler_gastos <- function(arquivo = "C:/Users/Mafra/Documents/AD1/workspace/AD1/dados/ano-atual.csv"){
#' Lê um csv criado a partir dos dados de gastos dos deputados da
#' Câmara e seta os tipos de colunas mais convenientemente.
#' Versão sem readr, para máquinas onde não é possível instalar esse pacote.
#' É um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, comment.char="#")
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
# Foram observados especialmente os atributos Partido, Nome, Valor Solicitado, Descricao e o Valor Liquido, ou seja, o que de fato foi recebido pelo deputado.
gastos <- gastos %>% select (1, 5, 6, 8, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Valor_solicitado", "Descricao", "Valor_liquido")
gastos <- gastos %>% filter (UF == "PB")
# Foram observados especialmente os atributos Partido, Nome, Valor Solicitado, Descricao e o Valor Liquido, ou seja, o que de fato foi recebido pelo deputado.
gastos <- gastos %>% select (1, 5, 6, 8, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Valor_solicitado", "Descricao", "Valor_liquido")
gastos <- gastos %>% filter (UF == "PB")
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
theme_set(theme_bw())
# carregando dados
ler_gastos <- function(arquivo = "C:/Users/Mafra/Documents/AD1/workspace/AD1/dados/ano-atual.csv"){
#' Lê um csv criado a partir dos dados de gastos dos deputados da
#' Câmara e seta os tipos de colunas mais convenientemente.
#' Versão sem readr, para máquinas onde não é possível instalar esse pacote.
#' É um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, comment.char="#")
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
# Foram observados especialmente os atributos Partido, Nome, Valor Solicitado, Descricao e o Valor Liquido, ou seja, o que de fato foi recebido pelo deputado.
gastos <- gastos %>% select (1, 5, 6, 8, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Valor_solicitado", "Descricao", "Valor_liquido")
gastos <- gastos %>% filter (UF == "PB")
# Pelo gráfico de barras gerado, observa-se que os servicos mais requisitados pelos parlamentares sao PASSAGENS AEREAS e COMBUSTIVEIS/LUBRIFICANTES, mas não necessariamente os maiores valores gastos são com eles
ggplot(gastos) +
geom_bar(mapping = aes(x = Descricao)) + coord_flip()
# carregando dados
ler_gastos <- function(arquivo = "C:/Users/Mafra/Documents/AD1/workspace/AD1/dados/ano-atual.csv"){
#' L? um csv criado a partir dos dados de gastos dos deputados da
#' C?mara e seta os tipos de colunas mais convenientemente.
#' Vers?o sem readr, para m?quinas onde n?o ? poss?vel instalar esse pacote.
#' ? um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, comment.char="#")
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
theme_set(theme_bw())
# carregando dados
ler_gastos <- function(arquivo = "C:/Users/Mafra/Documents/AD1/workspace/AD1/dados/ano-atual.csv"){
#' L? um csv criado a partir dos dados de gastos dos deputados da
#' C?mara e seta os tipos de colunas mais convenientemente.
#' Vers?o sem readr, para m?quinas onde n?o ? poss?vel instalar esse pacote.
#' ? um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, comment.char="#")
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
# Foram observados especialmente os atributos Partido, Nome, Valor Solicitado, Descricao e o Valor Liquido, ou seja, o que de fato foi recebido pelo deputado.
gastos <- gastos %>% select (1, 5, 6, 8, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Valor_solicitado", "Descricao", "Valor_liquido")
gastos <- gastos %>% filter (UF == "PB")
# Pelo gr?fico de barras gerado, observa-se que os servicos mais requisitados pelos parlamentares sao PASSAGENS AEREAS e COMBUSTIVEIS/LUBRIFICANTES, mas n?o necessariamente os maiores valores gastos s?o com eles
ggplot(gastos) +
geom_bar(mapping = aes(x = Descricao)) + coord_flip()
agrupa_nome = gastos %>%
group_by(Nome) %>%
summarise(total = sum(Valor_liquido))
ggplot(agrupa_nome) +
geom_point(mapping = aes(x = Nome, y = total)) + coord_flip()
View(mean(agrupa_nome$total)) # Em media, quanto os deputados gastam?
maior_valor = agrupa_nome %>% filter(total == max(total))
menor_valor = agrupa_nome %>% filter(total == min(total))
View(maior_valor) #deputado que mais gastou
View(menor_valor) #deputado que menos gastou
View(mean(gastos$Valor_liquido)) #O que cada deputado gasta em m?dia para cada servico solicitado
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
theme_set(theme_bw())
# carregando dados
ler_gastos <- function(arquivo = "C:/Users/Mafra/Documents/AD1/workspace/AD1/dados/ano-atual.csv"){
#' Lê um csv criado a partir dos dados de gastos dos deputados da
#' Câmara e seta os tipos de colunas mais convenientemente.
#' Versão sem readr, para máquinas onde não é possível instalar esse pacote.
#' É um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, encoding="UTF-8")
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
theme_set(theme_bw())
# carregando dados
ler_gastos <- function(arquivo = "C:/Users/Mafra/Documents/AD1/workspace/AD1/dados/ano-atual.csv"){
#' Lê um csv criado a partir dos dados de gastos dos deputados da
#' Câmara e seta os tipos de colunas mais convenientemente.
#' Versão sem readr, para máquinas onde não é possível instalar esse pacote.
#' É um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, encoding='UTF-8')
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
# Foram observados especialmente os atributos Partido, Nome, Valor Solicitado, Descricao e o Valor Liquido, ou seja, o que de fato foi recebido pelo deputado.
gastos <- gastos %>% select (1, 5, 6, 8, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Valor_solicitado", "Descricao", "Valor_liquido")
gastos <- gastos %>% filter (UF == "PB")
# Pelo gráfico de barras gerado, observa-se que os servicos mais requisitados pelos parlamentares sao PASSAGENS AEREAS e COMBUSTIVEIS/LUBRIFICANTES, mas não necessariamente os maiores valores gastos são com eles
ggplot(gastos) +
geom_bar(mapping = aes(x = Descricao)) + coord_flip()
agrupa_nome = gastos %>%
group_by(Nome) %>%
summarise(total = sum(Valor_liquido))
ggplot(agrupa_nome) +
geom_point(mapping = aes(x = Nome, y = total)) + coord_flip()
View(mean(agrupa_nome$total)) # Em media, quanto os deputados gastam?
maior_valor = agrupa_nome %>% filter(total == max(total))
menor_valor = agrupa_nome %>% filter(total == min(total))
View(maior_valor) #deputado que mais gastou
View(menor_valor) #deputado que menos gastou
View(mean(gastos$Valor_liquido)) #O que cada deputado gasta em média para cada servico solicitado
setwd("~/AD1/workspace/AD1")
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
theme_set(theme_bw())
# carregando dados
ler_gastos <- function(arquivo = "../dados/ano-atual.csv"){
#' Lê um csv criado a partir dos dados de gastos dos deputados da
#' Câmara e seta os tipos de colunas mais convenientemente.
#' Versão sem readr, para máquinas onde não é possível instalar esse pacote.
#' É um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, encoding='UTF-8')
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
# carregando dados
ler_gastos <- function(arquivo = "AD1/dados/ano-atual.csv"){
#' Lê um csv criado a partir dos dados de gastos dos deputados da
#' Câmara e seta os tipos de colunas mais convenientemente.
#' Versão sem readr, para máquinas onde não é possível instalar esse pacote.
#' É um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, encoding='UTF-8')
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
# carregando dados
ler_gastos <- function(arquivo = "dados/ano-atual.csv"){
#' Lê um csv criado a partir dos dados de gastos dos deputados da
#' Câmara e seta os tipos de colunas mais convenientemente.
#' Versão sem readr, para máquinas onde não é possível instalar esse pacote.
#' É um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, encoding='UTF-8')
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
theme_set(theme_bw())
# carregando dados
ler_gastos <- function(arquivo = "dados/ano-atual.csv"){
#' Lê um csv criado a partir dos dados de gastos dos deputados da
#' Câmara e seta os tipos de colunas mais convenientemente.
#' Versão sem readr, para máquinas onde não é possível instalar esse pacote.
#' É um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, encoding='UTF-8')
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
# Foram observados especialmente os atributos Partido, Nome, Valor Solicitado, Descricao e o Valor Liquido, ou seja, o que de fato foi recebido pelo deputado.
gastos <- gastos %>% select (1, 5, 6, 8, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Valor_solicitado", "Descricao", "Valor_liquido")
gastos_pb <- gastos %>% filter (UF == "PB")
# Foram observados especialmente os atributos Partido, Nome, Valor Solicitado, Descricao e o Valor Liquido, ou seja, o que de fato foi recebido pelo deputado.
gastos <- gastos %>% select (1, 5, 6, 8, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Valor_solicitado", "Descricao", "Valor_liquido")
gastos_pb <- gastos %>% filter (UF == "PB")
# Pelo gráfico de barras gerado, observa-se que os servicos mais requisitados pelos parlamentares sao PASSAGENS AEREAS e COMBUSTIVEIS/LUBRIFICANTES, mas não necessariamente os maiores valores gastos são com eles
ggplot(gastos_pb) +
geom_bar(mapping = aes(x = Descricao)) + coord_flip()
agrupa_nome = gastos_pb %>%
group_by(Nome) %>%
summarise(total = sum(Valor_liquido))
ggplot(agrupa_nome) +
geom_point(mapping = aes(x = Nome, y = total)) + coord_flip()
View(mean(agrupa_nome$total)) # Em media, quanto os deputados gastam?
maior_valor = agrupa_nome %>% filter(total == max(total))
menor_valor = agrupa_nome %>% filter(total == min(total))
View(maior_valor) #deputado que mais gastou
View(menor_valor) #deputado que menos gastou
View(mean(gastos$Valor_liquido)) #O que cada deputado gasta em média para cada servico solicitado
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
theme_set(theme_bw())
# carregando dados
ler_gastos <- function(arquivo = "dados/ano-atual.csv"){
#' Lê um csv criado a partir dos dados de gastos dos deputados da
#' Câmara e seta os tipos de colunas mais convenientemente.
#' Versão sem readr, para máquinas onde não é possível instalar esse pacote.
#' É um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, encoding='UTF-8')
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
# Foram observados especialmente os atributos Partido, Nome, Valor Solicitado, Descricao e o Valor Liquido, ou seja, o que de fato foi recebido pelo deputado.
gastos <- gastos %>% select (1, 5, 6, 8, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Valor_solicitado", "Descricao", "Valor_liquido")
gastos_pb <- gastos %>% filter (UF == "PB")
# Pelo gráfico de barras gerado, observa-se que os servicos mais requisitados pelos parlamentares sao PASSAGENS AEREAS e COMBUSTIVEIS/LUBRIFICANTES, mas não necessariamente os maiores valores gastos são com eles
ggplot(gastos_pb) +
geom_bar(mapping = aes(x = Descricao)) + coord_flip()
summary(gastos_pb$Valor_liquido)
summary(agrupa_nome)
summary(agrupa_nome$total)
View(agrupa_nome %>% filter(total == 242700))
max(agrupa_nome$total)
View(agrupa_nome %>% filter(total == 242654.3))
max(agrupa_nome$total)
min(agrupa_nome$total)
View(mean(agrupa_nome$total)) # Em media, quanto os deputados gastam?
maior_valor = agrupa_nome %>% filter(total == max(total))
menor_valor = agrupa_nome %>% filter(total == min(total))
maior_valor = agrupa_nome %>% filter(total == max(total))
View(maior_valor) #deputado que mais gastou
View(menor_valor) #deputado que menos gastou
summary(agrupa_nome$total)
View(mean(agrupa_nome$total)) # Em media, quanto os deputados gastam?
maior_valor = agrupa_nome %>% filter(total == max(total))
View(maior_valor) #deputado que mais gastou
menor_valor = agrupa_nome %>% filter(total == min(total))
View(menor_valor) #deputado que menos gastou
View(mean(gastos$Valor_liquido)) #O que cada deputado gasta em média para cada servico solicitado
View(mean(agrupa_nome$total))
gastos_1 <- gastos %>% filter (Nome == "DAMIÃO FELICIANO")
View(gastos_1)
sum(gastos_1$Valor_liquido)
agrupa_nome = gastos_pb %>%
group_by(Nome) %>%
summarise(total = sum(Valor_liquido))
ggplot(agrupa_nome) +
geom_point(mapping = aes(x = Nome, y = total)) + coord_flip()
gastos_1 <- gastos %>% filter (Nome == "PEDRO CUNHA LIMA")
View(gastos_1)
agrupa_categoria = gastos_pb %>%
group_by(Descricao) %>%
summarise(total = sum(Valor_liquido))
ggplot(agrupa_categoria) +
geom_point(mapping = aes(x = Descricao, y = total)) + coord_flip()
max (agrupa_categoria$total)
View(gastos_pb)
View(agrupa_categoria)
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
theme_set(theme_bw())
ler_gastos <- function(arquivo = "dados/ano-atual.csv"){
#' Lê um csv criado a partir dos dados de gastos dos deputados da
#' Câmara e seta os tipos de colunas mais convenientemente.
#' Versão sem readr, para máquinas onde não é possível instalar esse pacote.
#' É um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, encoding='UTF-8')
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
gastos <- gastos %>% select (1, 5, 6, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Descricao", "Valor_liquido")
gastos_pb <- gastos %>% filter (UF == "PB")
summary(gastos_pb $ Valor_liquido)
kable(summary(gastos_pb $ Valor_liquido))
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
library(knitr)
theme_set(theme_bw())
kable(summary(gastos_pb $ Valor_liquido))
kable(min(gastos_pb $ Valor_liquido))
kable("Valor minimo", min(gastos_pb $ Valor_liquido))
summary(gastos_pb $ Valor_liquido)
View(gastos_pb %>% filter(Valor_liquido < -2800))
summary(agrupa_nome$total)
View(agrupa_nome %>% filter(total > 240000))
ggplot(agrupa_nome, aes(x= Nome, y = total)) + geom_bar(stat = "identity") + coord_flip()
#Aqui é analisado o resumo de todos gastos (valor líquido) feitos pelos deputados, ainda não categorizados (Podemos ter gastos diferentes para uma mesma categoria como TELEFONIA, por exemplo). O principal objetivo dessa análise foi verificar algo um tanto quanto estranho, que é a existência de observações cujo o valor da despesa é negativo. Isso acontece pois para situações de emissão de bilhetes aéreos, significando que o referido bilhete é um bilhete de compensação, pois compensa um outro bilhete emitido e não utilizado pelo deputado.
summary(gastos_pb $ Valor_liquido)
#Agora, vamos focar em observar os gastos de cada deputado no geral, somando todos os seus valores líquidos.
agrupa_nome = gastos_pb %>%
group_by(Nome) %>%
summarise(total_gasto = sum(Valor_liquido))
# Inicialmente, observando o resumo, temos que o deputado que mais gastou durante o período observado gastou aproximadamente 242700 reais, enquanto o mínimo foi aproximadamente 41880
summary(agrupa_nome$total_gasto)
# Gerando um gráfico de barras para observar melhor tais extremos
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "identity") + coord_flip()
# Pelo gráfico de barras gerado, observa-se que os serviços mais requisitados pelos parlamentares são EMISSÃO DE BILHETES AÉREOS e COMBUSTIVEIS/LUBRIFICANTES, mas não necessariamente os maiores valores gastos são com eles. Essa análise será feita mais a frente
ggplot(gastos_pb) +
geom_bar(mapping = aes(x = Descricao)) + coord_flip()
#Aqui é analisado o resumo de todos gastos (valor líquido) feitos pelos deputados, ainda não categorizados (Podemos ter gastos diferentes para uma mesma categoria como TELEFONIA, por exemplo). O principal objetivo dessa análise foi verificar algo um tanto quanto estranho, que é a existência de observações cujo o valor da despesa é negativo. Isso acontece pois para situações de emissão de bilhetes aéreos, significando que o referido bilhete é um bilhete de compensação, pois compensa um outro bilhete emitido e não utilizado pelo deputado.
summary(gastos_pb $ Valor_liquido)
#Agora, vamos focar em observar os gastos de cada deputado no geral, somando todos os seus valores líquidos.
agrupa_nome = gastos_pb %>%
group_by(Nome) %>%
summarise(total_gasto = sum(Valor_liquido))
# Inicialmente, observando o resumo, temos que o deputado que mais gastou durante o período observado gastou aproximadamente 242700 reais, enquanto o mínimo foi aproximadamente 41880
summary(agrupa_nome$total_gasto)
# Gerando um gráfico de barras para observar melhor tais extremos. Pedro Cunha Lima é o deputado que menos gasta e o Rômulo Gouveia o deputado que mais gasta
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "identity") + coord_flip()
# Um ponto surpreendente notável é a diferença exorbitante de gastos de Pedro para os demais deputados. O mais indicado para um analista de dados seria pesquisar algo sobre o ponto estranho a fim de encontrar uma razao. Na verdade, Pedro Cunha Lima se afastou do cargo no fim do ano passado para terminar o seu mestrado, o que explica esse pequeno valor gasto. Seu substituto, Marcondes Gadelha, inclusive, é o segundo que menos gastou.
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank())
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + abline(mean(agrupa_nome$total_gasto))
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + geom_line(mapping = aes(mean(agrupa_nome$total_gasto)) )
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto))+ geom_line(mapping = aes(mean(agrupa_nome$total_gasto)) ) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank())
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank())
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + geom_errorbar(aes(y = mean(agrupa_nome$total_gasto)), colour="black", width=.1, position=pd)
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + geom_errorbar(aes(y = mean(agrupa_nome$total_gasto)), colour="black", width=.1)
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank())
summary(agrupa_nome$total_gasto)
ggplot(agrupa_nome, aes(x = Nome, y = total_gasto)) + geom_point() + coord_flip() + geom_point(data = mean(agrupa_nome$total_gasto), colour = "red")
ggplot(agrupa_nome, aes(x = Nome, y = total_gasto)) + geom_point() + coord_flip() + geom_point(data = min(agrupa_nome$total_gasto), colour = "red")
ggplot(agrupa_nome, aes(x = Nome, y = total_gasto)) + geom_point() + coord_flip() + stat_summary(fun.y = mean, geom="line")
ggplot(agrupa_nome, aes(x = Nome, y = total_gasto)) + geom_point() + coord_flip() + geom_line(stat = "hline", yintercept = "mean")
ggplot(agrupa_nome, aes(x = Nome, y = total_gasto)) + geom_point() + coord_flip() + geom_line(yintercept = "mean")
ggplot(agrupa_nome, aes(x = total_gasto)) + geom_boxplot( stat = "boxplot")  +
theme(panel.background=element_blank(),
legend.title=element_blank(), axis.text.x=element_blank(), axis.title.y=element_blank(), axis.line=element_blank(), axis.title.x=element_blank(), axis.ticks=element_blank()) +
scale_y_continuous(breaks = round(seq(140000, 300000, by = 10000),), limits = c(140000, 300000))
ggplot(agrupa_nome, aes(x = total_gasto, y = total_gasto)) + geom_boxplot( stat = "boxplot")  +
theme(panel.background=element_blank(),
legend.title=element_blank(), axis.text.x=element_blank(), axis.title.y=element_blank(), axis.line=element_blank(), axis.title.x=element_blank(), axis.ticks=element_blank()) +
scale_y_continuous(breaks = round(seq(140000, 300000, by = 50000),), limits = c(140000, 300000))
ggplot(agrupa_nome, aes(y = total_gasto, x = total_gasto)) + geom_boxplot( stat = "boxplot")  +
theme(panel.background=element_blank(),
legend.title=element_blank(), axis.text.x=element_blank(), axis.title.y=element_blank(), axis.line=element_blank(), axis.title.x=element_blank(), axis.ticks=element_blank()) +
scale_y_continuous(breaks = round(seq(140000, 300000, by = 50000),), limits = c(140000, 300000))
ggplot(agrupa_nome, aes(y = total_gasto, x = total_gasto)) + geom_boxplot( stat = "boxplot")  +
theme(panel.background=element_blank(),
legend.title=element_blank(), axis.text.x=element_blank(), axis.title.y=element_blank(), axis.line=element_blank(), axis.title.x=element_blank(), axis.ticks=element_blank()) +
scale_y_continuous(group = agrupa_nome, breaks = round(seq(140000, 300000, by = 50000),), limits = c(140000, 300000))
ggplot(agrupa_nome, aes(y = total_gasto, x = total_gasto)) + geom_boxplot( stat = "boxplot")  +
theme(panel.background=element_blank(),
legend.title=element_blank(), axis.text.x=element_blank(), axis.title.y=element_blank(), axis.line=element_blank(), axis.title.x=element_blank(), axis.ticks=element_blank()) +
scale_y_continuous(group = agrupa_nome$total_gasto, breaks = round(seq(140000, 300000, by = 50000),), limits = c(140000, 300000))
ggplot(agrupa_nome, aes(y = total_gasto, x = Nome)) + geom_boxplot( stat = "boxplot")  +
theme(panel.background=element_blank(),
legend.title=element_blank(), axis.text.x=element_blank(), axis.title.y=element_blank(), axis.line=element_blank(), axis.title.x=element_blank(), axis.ticks=element_blank()) +
scale_y_continuous(breaks = round(seq(140000, 300000, by = 50000),), limits = c(140000, 300000))
ggplot(agrupa_nome, aes(y = total_gasto)) + geom_boxplot( stat = "boxplot")  +
theme(panel.background=element_blank(),
legend.title=element_blank(), axis.text.x=element_blank(), axis.title.y=element_blank(), axis.line=element_blank(), axis.title.x=element_blank(), axis.ticks=element_blank()) +
scale_y_continuous(breaks = round(seq(140000, 300000, by = 50000),), limits = c(140000, 300000))
ggplot(agrupa_nome, aes(y = total_gasto, x = total_gasto)) + geom_boxplot( stat = "boxplot")  +
theme(panel.background=element_blank(),
legend.title=element_blank(), axis.text.x=element_blank(), axis.title.y=element_blank(), axis.line=element_blank(), axis.title.x=element_blank(), axis.ticks=element_blank()) +
scale_y_continuous(breaks = round(seq(140000, 300000, by = 50000),), limits = c(140000, 300000))
summary(agrupa_nome$total_gasto)
summary(gastos_pb $ Valor_liquido)
ggplot(agrupa_nome, aes(x = Nome, y = total_gasto)) + geom_point() + coord_flip()
ggplot(agrupa_nome, aes(x = Nome, y = total_gasto)) + geom_point() + coord_flip()
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank())
ggplot(agrupa_nome, mapping = aes(x = total_gasto, y = total_gasto)) +
+  geom_boxplot() + geom_point( aes(color=factor(Nome)),
+               position=position_dodge(width=0.75) )
ggplot(agrupa_nome, mapping = aes(x = total_gasto, y = total_gasto)) +
+  geom_boxplot() + geom_point( aes(color=factor(Nome)),
+               position=position_dodge(width=0.75) )
ggplot(agrupa_nome, mapping = aes(x = total_gasto, y = total_gasto)) +  geom_boxplot() + geom_point(aes(color=factor(Nome)),               position=position_dodge(width=0.75) )
ggplot(agrupa_nome, aes(x = Nome, y = total_gasto)) + geom_point() + coord_flip()
agrupa_categoria = gastos_pb %>%
group_by(Descricao) %>%
summarise(total = sum(Valor_liquido))
ggplot(agrupa_categoria) +
geom_point(mapping = aes(x = Descricao, y = total)) + coord_flip()
agrupa_categoria = gastos_pb %>%
group_by(Descricao) %>%
summarise(total_gasto = sum(Valor_liquido))
ggplot(agrupa_categoria, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank())
agrupa_categoria = gastos_pb %>%
group_by(Descricao) %>%
summarise(total_gasto = sum(Valor_liquido))
ggplot(agrupa_categoria, aes(x= Descricao, y = total_gasto)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank())
ggplot(agrupa_categoria, aes(x= Descricao, y = total_gasto)) + geom_bar(stat = "identity") + coord_map()
ggplot(agrupa_categoria, aes(x= Descricao, y = total_gasto)) + geom_bar(stat = "identity") + coord_flip()
summary(agrupa_categoria$total_gasto)
View(agrupa_categoria %>% filter(total_gasto == 659))
View(agrupa_categoria %>% filter(total_gasto < 659))
View(agrupa_categoria %>% filter(total_gasto < 800))
View(agrupa_categoria %>% filter(total_gasto < 1000))
View(agrupa_categoria %>% filter(total_gasto < 1500))
View(agrupa_categoria %>% filter(total_gasto < 800))
View(agrupa_categoria %>% filter(Descricao == "SERVIÇO DE TAXI, PEDÁGIO E ESTACIONAMENTO"))
View(agrupa_categoria %>% filter(Descricao == "ASSINATURA DE PUBLICAÇÕES"))
View(agrupa_categoria %>% filter(total_gasto < 3000))
agrupa_categoria = gastos_pb %>%
group_by(Descricao) %>%
summarise(total_gasto = sum(Valor_liquido))
ggplot(agrupa_categoria, aes(x= Descricao, y = total_gasto)) + geom_bar(stat = "identity") + coord_flip() + ylab("Tipo de despesa") + xlab("Total gasto")
agrupa_categoria = gastos_pb %>%
group_by(Descricao) %>%
summarise(total_gasto = sum(Valor_liquido))
ggplot(agrupa_categoria, aes(x= Descricao, y = total_gasto)) + geom_bar(stat = "identity") + coord_flip() + ylab("TOtal gasto") + xlab("Tipo de despesa")
agrupa_categoria = gastos_pb %>%
group_by(Descricao) %>%
summarise(total_gasto = sum(Valor_liquido))
ggplot(agrupa_categoria, aes(x= Descricao, y = total_gasto)) + geom_bar(stat = "identity") + coord_flip() + ylab("Total gasto") + xlab("Tipo de despesa")
agrupa_categoria = gastos_pb %>%
group_by(Descricao) %>%
summarise(desvio_padrao = sd(Valor_liquido))
ggplot(agrupa_categoria, aes(x= Descricao, y = total_gasto)) + geom_bar(stat = "identity") + coord_flip() + ylab("Desvio") + xlab("Tipo de despesa")
agrupa_categoria = gastos_pb %>%
group_by(Descricao) %>%
summarise(desvio_padrao = sd(Valor_liquido))
ggplot(agrupa_categoria, aes(x= Descricao, y = desvio_padrao)) + geom_bar(stat = "identity") + coord_flip() + ylab("Desvio") + xlab("Tipo de despesa")
summary(agrupa_categoria$Descricao)
summary(agrupa_categoria$desvio_padrao)
agrupa_categoria = gastos_pb %>%
group_by(Descricao) %>%
summarise(desvio_padrao = sd(Valor_liquido))
ggplot(agrupa_categoria, aes(x= Descricao, y = desvio_padrao)) + geom_bar(stat = "identity") + coord_flip() + ylab("Desvio") + xlab("Tipo de despesa")
atividade_parlamentar <- gastos_pb %>% filter(Descricao == "DIVULGAÇÃO DE ATIVIDADE PARLAMENTAR")
atividade_parlamentar <- gastos_pb %>% filter(Descricao == "DIVULGAÇÃO DA ATIVIDADE PARLAMENTAR")
View(atividade_parlamentar)
View(gastos_pb)
atividade_parlamentar <- gastos_pb %>% filter(Descricao == "DIVULGAÇÃO DA ATIVIDADE PARLAMENTAR.")
View(atividade_parlamentar)
atividade_parlamentar <- gastos_pb %>% filter(Descricao == "DIVULGAÇÃO DA ATIVIDADE PARLAMENTAR.")
ggplot(atividade_parlamentar, aes(x = Nome, y = atividade_parlamentar$Valor_liquido)) + geom_point() + coord_flip()
ggplot(atividade_parlamentar, aes(x = Nome, y = atividade_parlamentar$Valor_liquido)) + geom_point() + coord_flip()  + ylab("Valor gasto") + xlab("Deputado")
ggplot(agrupa_categoria, aes(x= Descricao, y = desvio_padrao)) + geom_bar(stat = "identity") + coord_flip() + ylab("Desvio") + xlab("Tipo de despesa")
bilhetes <- gastos_pb %>% filter(Descricao == "Emissão Bilhete Aéreo.")
ggplot(bilhetes, aes(x = Nome, y = Valor_liquido)) + geom_point() + coord_flip()  + ylab("Valor gasto") + xlab("Deputado")
bilhetes <- gastos_pb %>% filter(Descricao == "Emissão Bilhete Aéreo")
ggplot(bilhetes, aes(x = Nome, y = Valor_liquido)) + geom_point() + coord_flip()  + ylab("Valor gasto") + xlab("Deputado")
atividade_parlamentar <- gastos_pb %>% filter(Descricao == "DIVULGAÇÃO DA ATIVIDADE PARLAMENTAR.")
summary(atividade_parlamentar$Valor_liquido)
ggplot(atividade_parlamentar, aes(x = Nome, y = atividade_parlamentar$Valor_liquido)) + geom_point() + coord_flip()  + ylab("Valor gasto") + xlab("Deputado")
View(atividade_parlamentar %>% filter(Valor_liquido < 400))
View(atividade_parlamentar %>% filter(Valor_liquido < 600))
