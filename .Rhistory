pks = c("ggplot2", "readr", "tidyr", "gmodels")
install.packages(pks)
clear
install.packages("base64")
install.packages("base64enc")
install.packages("jsonlite")
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
theme_set(theme_bw())
# carregando dados
ler_gastos <- function(arquivo = "C:/Users/Mafra/Documents/AD1/workspace/AD1/dados/ano-atual.csv"){
#' Ler um csv criado a partir dos dados de gastos dos deputados da
#' C√É¬¢mara e seta os tipos de colunas mais convenientemente.
#' Vers√É¬£o sem readr, para m√É¬°quinas onde n√É¬£o √É¬© poss√É≠vel instalar esse pacote.
#' √É¬â um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, encoding="UTF-8")
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
# Foram observados especialmente os atributos Partido, Nome, Valor Solicitado, Descricao e o Valor Liquido, ou seja, o que de fato foi recebido pelo deputado.
gastos <- gastos %>% select (1, 5, 6, 8, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Valor_solicitado", "Descricao", "Valor_liquido")
gastos <- gastos %>% filter (UF == "PB")
# Pelo gr√É¬°fico de barras gerado, observa-se que os servicos mais requisitados pelos parlamentares sao PASSAGENS AEREAS e COMBUSTIVEIS/LUBRIFICANTES, mas nao necessariamente os maiores valores gastos sao com eles
ggplot(gastos) +
geom_bar(mapping = aes(x = Descricao)) + coord_flip()
agrupa_nome = gastos %>%
group_by(Nome) %>%
summarise(total = sum(Valor_liquido))
ggplot(agrupa_nome) +
geom_point(mapping = aes(x = Nome, y = total)) + coord_flip()
View(mean(agrupa_nome$total)) # Em media, quanto os deputados gastam?
ggplot(agrupa_nome) +
geom_histogram(mapping = aes(x = Descricao)) + coord_flip()
maior_valor = agrupa_nome %>% filter(total == max(total))
menor_valor = agrupa_nome %>% filter(total == min(total))
View(maior_valor) #deputado que mais gastou
View(menor_valor) #deputado que menos gastou
View(mean(gastos$Valor_liquido)) #O que cada deputado gasta em m√É¬©dia para cada servico solicitado
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
theme_set(theme_bw())
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
theme_set(theme_bw())
# carregando dados
ler_gastos <- function(arquivo = "C:/Users/Mafra/Documents/AD1/workspace/AD1/dados/ano-atual.csv"){
#' L√™ um csv criado a partir dos dados de gastos dos deputados da
#' C√¢mara e seta os tipos de colunas mais convenientemente.
#' Vers√£o sem readr, para m√°quinas onde n√£o √© poss√≠vel instalar esse pacote.
#' √â um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, comment.char="#")
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
# Foram observados especialmente os atributos Partido, Nome, Valor Solicitado, Descricao e o Valor Liquido, ou seja, o que de fato foi recebido pelo deputado.
gastos <- gastos %>% select (1, 5, 6, 8, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Valor_solicitado", "Descricao", "Valor_liquido")
gastos <- gastos %>% filter (UF == "PB")
# Pelo gr√°fico de barras gerado, observa-se que os servicos mais requisitados pelos parlamentares sao PASSAGENS AEREAS e COMBUSTIVEIS/LUBRIFICANTES, mas n√£o necessariamente os maiores valores gastos s√£o com eles
ggplot(gastos) +
geom_bar(mapping = aes(x = Descricao)) + coord_flip()
agrupa_nome = gastos %>%
group_by(Nome) %>%
summarise(total = sum(Valor_liquido))
ggplot(agrupa_nome) +
geom_point(mapping = aes(x = Nome, y = total)) + coord_flip()
View(mean(agrupa_nome$total)) # Em media, quanto os deputados gastam?
ggplot(agrupa_nome) +
geom_histogram(mapping = aes(x = Descricao)) + coord_flip()
maior_valor = agrupa_nome %>% filter(total == max(total))
menor_valor = agrupa_nome %>% filter(total == min(total))
View(maior_valor) #deputado que mais gastou
View(menor_valor) #deputado que menos gastou
View(mean(gastos$Valor_liquido)) #O que cada deputado gasta em m√©dia para cada servico solicitado
agrupa_nome = gastos %>%
group_by(Nome) %>%
summarise(total = sum(Valor_liquido))
ggplot(agrupa_nome) +
geom_point(mapping = aes(x = Nome, y = total)) + coord_flip()
View(mean(agrupa_nome$total)) # Em media, quanto os deputados gastam?
ggplot(agrupa_nome) +
geom_histogram(mapping = aes(x = Descricao)) + coord_flip()
maior_valor = agrupa_nome %>% filter(total == max(total))
menor_valor = agrupa_nome %>% filter(total == min(total))
View(maior_valor) #deputado que mais gastou
View(menor_valor) #deputado que menos gastou
View(mean(gastos$Valor_liquido)) #O que cada deputado gasta em m√©dia para cada servico solicitado
agrupa_nome = gastos %>%
group_by(Nome) %>%
summarise(total = sum(Valor_liquido))
ggplot(agrupa_nome) +
geom_point(mapping = aes(x = Nome, y = total)) + coord_flip()
View(mean(agrupa_nome$total)) # Em media, quanto os deputados gastam?
maior_valor = agrupa_nome %>% filter(total == max(total))
menor_valor = agrupa_nome %>% filter(total == min(total))
View(maior_valor) #deputado que mais gastou
View(menor_valor) #deputado que menos gastou
View(mean(gastos$Valor_liquido)) #O que cada deputado gasta em m√©dia para cada servico solicitado
agrupa_nome = gastos %>%
group_by(Nome) %>%
summarise(total = sum(Valor_liquido))
ggplot(agrupa_nome) +
geom_point(mapping = aes(x = Nome, y = total)) + coord_flip()
View(mean(agrupa_nome$total)) # Em media, quanto os deputados gastam?
maior_valor = agrupa_nome %>% filter(total == max(total))
menor_valor = agrupa_nome %>% filter(total == min(total))
View(maior_valor) #deputado que mais gastou
View(menor_valor) #deputado que menos gastou
View(mean(gastos$Valor_liquido)) #O que cada deputado gasta em m√©dia para cada servico solicitado
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
theme_set(theme_bw())
# carregando dados
ler_gastos <- function(arquivo = "C:/Users/Mafra/Documents/AD1/workspace/AD1/dados/ano-atual.csv"){
#' L√™ um csv criado a partir dos dados de gastos dos deputados da
#' C√¢mara e seta os tipos de colunas mais convenientemente.
#' Vers√£o sem readr, para m√°quinas onde n√£o √© poss√≠vel instalar esse pacote.
#' √â um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, comment.char="#")
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
# Foram observados especialmente os atributos Partido, Nome, Valor Solicitado, Descricao e o Valor Liquido, ou seja, o que de fato foi recebido pelo deputado.
gastos <- gastos %>% select (1, 5, 6, 8, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Valor_solicitado", "Descricao", "Valor_liquido")
gastos <- gastos %>% filter (UF == "PB")
# Foram observados especialmente os atributos Partido, Nome, Valor Solicitado, Descricao e o Valor Liquido, ou seja, o que de fato foi recebido pelo deputado.
gastos <- gastos %>% select (1, 5, 6, 8, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Valor_solicitado", "Descricao", "Valor_liquido")
gastos <- gastos %>% filter (UF == "PB")
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
theme_set(theme_bw())
# carregando dados
ler_gastos <- function(arquivo = "C:/Users/Mafra/Documents/AD1/workspace/AD1/dados/ano-atual.csv"){
#' L√™ um csv criado a partir dos dados de gastos dos deputados da
#' C√¢mara e seta os tipos de colunas mais convenientemente.
#' Vers√£o sem readr, para m√°quinas onde n√£o √© poss√≠vel instalar esse pacote.
#' √â um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, comment.char="#")
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
# Foram observados especialmente os atributos Partido, Nome, Valor Solicitado, Descricao e o Valor Liquido, ou seja, o que de fato foi recebido pelo deputado.
gastos <- gastos %>% select (1, 5, 6, 8, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Valor_solicitado", "Descricao", "Valor_liquido")
gastos <- gastos %>% filter (UF == "PB")
# Pelo gr√°fico de barras gerado, observa-se que os servicos mais requisitados pelos parlamentares sao PASSAGENS AEREAS e COMBUSTIVEIS/LUBRIFICANTES, mas n√£o necessariamente os maiores valores gastos s√£o com eles
ggplot(gastos) +
geom_bar(mapping = aes(x = Descricao)) + coord_flip()
# carregando dados
ler_gastos <- function(arquivo = "C:/Users/Mafra/Documents/AD1/workspace/AD1/dados/ano-atual.csv"){
#' L? um csv criado a partir dos dados de gastos dos deputados da
#' C?mara e seta os tipos de colunas mais convenientemente.
#' Vers?o sem readr, para m?quinas onde n?o ? poss?vel instalar esse pacote.
#' ? um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, comment.char="#")
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
theme_set(theme_bw())
# carregando dados
ler_gastos <- function(arquivo = "C:/Users/Mafra/Documents/AD1/workspace/AD1/dados/ano-atual.csv"){
#' L? um csv criado a partir dos dados de gastos dos deputados da
#' C?mara e seta os tipos de colunas mais convenientemente.
#' Vers?o sem readr, para m?quinas onde n?o ? poss?vel instalar esse pacote.
#' ? um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, comment.char="#")
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
# Foram observados especialmente os atributos Partido, Nome, Valor Solicitado, Descricao e o Valor Liquido, ou seja, o que de fato foi recebido pelo deputado.
gastos <- gastos %>% select (1, 5, 6, 8, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Valor_solicitado", "Descricao", "Valor_liquido")
gastos <- gastos %>% filter (UF == "PB")
# Pelo gr?fico de barras gerado, observa-se que os servicos mais requisitados pelos parlamentares sao PASSAGENS AEREAS e COMBUSTIVEIS/LUBRIFICANTES, mas n?o necessariamente os maiores valores gastos s?o com eles
ggplot(gastos) +
geom_bar(mapping = aes(x = Descricao)) + coord_flip()
agrupa_nome = gastos %>%
group_by(Nome) %>%
summarise(total = sum(Valor_liquido))
ggplot(agrupa_nome) +
geom_point(mapping = aes(x = Nome, y = total)) + coord_flip()
View(mean(agrupa_nome$total)) # Em media, quanto os deputados gastam?
maior_valor = agrupa_nome %>% filter(total == max(total))
menor_valor = agrupa_nome %>% filter(total == min(total))
View(maior_valor) #deputado que mais gastou
View(menor_valor) #deputado que menos gastou
View(mean(gastos$Valor_liquido)) #O que cada deputado gasta em m?dia para cada servico solicitado
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
theme_set(theme_bw())
# carregando dados
ler_gastos <- function(arquivo = "C:/Users/Mafra/Documents/AD1/workspace/AD1/dados/ano-atual.csv"){
#' L√™ um csv criado a partir dos dados de gastos dos deputados da
#' C√¢mara e seta os tipos de colunas mais convenientemente.
#' Vers√£o sem readr, para m√°quinas onde n√£o √© poss√≠vel instalar esse pacote.
#' √â um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, encoding="UTF-8")
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
theme_set(theme_bw())
# carregando dados
ler_gastos <- function(arquivo = "C:/Users/Mafra/Documents/AD1/workspace/AD1/dados/ano-atual.csv"){
#' L√™ um csv criado a partir dos dados de gastos dos deputados da
#' C√¢mara e seta os tipos de colunas mais convenientemente.
#' Vers√£o sem readr, para m√°quinas onde n√£o √© poss√≠vel instalar esse pacote.
#' √â um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, encoding='UTF-8')
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
# Foram observados especialmente os atributos Partido, Nome, Valor Solicitado, Descricao e o Valor Liquido, ou seja, o que de fato foi recebido pelo deputado.
gastos <- gastos %>% select (1, 5, 6, 8, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Valor_solicitado", "Descricao", "Valor_liquido")
gastos <- gastos %>% filter (UF == "PB")
# Pelo gr√°fico de barras gerado, observa-se que os servicos mais requisitados pelos parlamentares sao PASSAGENS AEREAS e COMBUSTIVEIS/LUBRIFICANTES, mas n√£o necessariamente os maiores valores gastos s√£o com eles
ggplot(gastos) +
geom_bar(mapping = aes(x = Descricao)) + coord_flip()
agrupa_nome = gastos %>%
group_by(Nome) %>%
summarise(total = sum(Valor_liquido))
ggplot(agrupa_nome) +
geom_point(mapping = aes(x = Nome, y = total)) + coord_flip()
View(mean(agrupa_nome$total)) # Em media, quanto os deputados gastam?
maior_valor = agrupa_nome %>% filter(total == max(total))
menor_valor = agrupa_nome %>% filter(total == min(total))
View(maior_valor) #deputado que mais gastou
View(menor_valor) #deputado que menos gastou
View(mean(gastos$Valor_liquido)) #O que cada deputado gasta em m√©dia para cada servico solicitado
setwd("~/AD1/workspace/AD1")
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
library(knitr)
theme_set(theme_bw())
ler_gastos <- function(arquivo){
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, encoding='UTF-8')
return(gastos)
}
gastos <- ler_gastos("dados/ano-atual.csv")
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
ler_gastos <- function(arquivo){
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, encoding='UTF-8')
return(gastos)
}
gastos <- ler_gastos("dados/ano-atual.csv")
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
cotas <- ler_gastos("dados/valor-cota-por-estado.csv")
gastos <- merge(gastos, cotas)
gastos <- gastos %>% select (1, 2, 3, 6, 15, 23, 30)
names(gastos) <- c("UF", "Partido", "Mes", "Nome", "Tipo_despesa", "Valor_liquido", "Cota")
gastos_marco <- gastos %>% filter (Mes == "3")
View(gastos_marco)
summary(gastos_pb $ Valor_liquido)
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
library(knitr)
theme_set(theme_bw())
ler_gastos <- function(arquivo = "dados/ano-atual.csv"){
#' L√™ um csv criado a partir dos dados de gastos dos deputados da
#' C√¢mara e seta os tipos de colunas mais convenientemente.
#' Vers√£o sem readr, para m√°quinas onde n√£o √© poss√≠vel instalar esse pacote.
#' √â um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, encoding='UTF-8')
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
ler_cotas <- function(arquivo = "dados/valor-cota-por-estado.csv"){
#' L√™ um csv criado a partir dos dados de gastos dos deputados da
#' C√¢mara e seta os tipos de colunas mais convenientemente.
#' Vers√£o sem readr, para m√°quinas onde n√£o √© poss√≠vel instalar esse pacote.
#' √â um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
cota = read.csv(arquivo, stringsAsFactors = FALSE, encoding='UTF-8')
return(cota)
}
gastos <- gastos %>% select (1, 2, 3, 6, 15, 23, 30)
names(gastos) <- c("UF", "Partido", "Mes", "Nome", "Tipo_despesa", "Valor_liquido", "Cota")
gastos_marco <- gastos %>% filter (Mes == "3" & UF == "PB")
gastos_pb <- gastos %>% filter (UF == "PB")
summary(gastos_pb $ Valor_liquido)
agrupa_nome = gastos_pb %>%
group_by(Nome) %>%
summarise(total_gasto = sum(Valor_liquido))
summary(agrupa_nome$total_gasto)
agrupa_estado <- gastos %>% group_by(UF)
View(agrupa_estado)
agrupa_estado <- gastos %>% group_by(UF) %>% summarise(total_gasto = sum(Valor_liquido), cota_total = sum(Cota))
View(agrupa_estado)
agrupa_estado <- gastos %>% group_by(UF, Cota) %>% summarise(total_gasto = sum(Valor_liquido), cota_total = sum(Cota))
View(agrupa_estado)
agrupa_estado <- gastos %>% group_by(UF, Cota) %>% summarise(total_gasto = sum(Valor_liquido), Cota)
agrupa_estado <- gastos %>% group_by(UF, Cota) %>% summarise(total_gasto = sum(Valor_liquido), cota = Cota)
agrupa_estado <- gastos %>% group_by(UF, Cota) %>% summarise(media = mean(Valor_liquido))
View(agrupa_estado)
agrupa_nome <- gastos %>% group_by(Nome) %>% summarise(total_cota)
agrupa_nome <- gastos %>% group_by(Nome) %>% summarise(total_cota = sum(Cota))
View(agrupa_nome)
aux = table(gastos$UF)
filtrada = gastos %>% filter (UF == "PB")
aux = table(filtrada$Nome)
filtrada = gastos %>% filter (UF == "PB") %>% group_by(Nome)
View(filtrada)
View(filtrada)
length(which(gastos$UF == "PB"))
filtrada = gastos %>% group_by(Nome)%>%  filter (UF == "PB")
View(filtrada)
filtrada = gastos %>% group_by(Nome)%>%  filter (UF == "PB") %>% summarise(total = sum(Valor_liquido))
View(filtrada)
filtrada = gastos %>% group_by(Nome)%>%  filter (UF == "PB") %>% summarise(total = sum(Valor_liquido))
mean (filtrada$total)
filtrada = gastos %>% group_by(Nome)%>%  filter (UF == "PB" & Mes == "3") %>% summarise(total = sum(Valor_liquido))
mean (filtrada$total)
aux = unique(gastos$Nome)
aux = unique(gastos$filtradas)
teste <- unique(gastos$UF)
length(teste)
filtrada = gastos %>% group_by(Nome)%>%  filter (UF == "PB" & Mes == "3") %>% summarise(total = sum(Valor_liquido))
View(filtrada)
filtrada = gastos %>% group_by(Nome, Cota)%>%  filter (UF == "PB" & Mes == "3") %>% summarise(total = sum(Valor_liquido))
View(filtrada)
sum(filtrada$total) / filtrada$Cota
ler_gastos <- function(arquivo){
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, encoding='UTF-8')
return(gastos)
}
gastos <- ler_gastos("dados/ano-atual.csv")
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
gastos <- gastos %>% select (1, 2, 6, 15, 23)
View(gastos)
gastos <- ler_gastos("dados/ano-atual.csv")
View(gastos)
gastos <- ler_gastos("dados/ano-atual.csv")
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
gastos <- gastos %>% select (1, 5, 6, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Tipo_despesa", "Valor_liquido")
View(gastos)
agrupa_partido <- gastos %>% group_by(Partido) %>% summarise(total_cota = sum(Valor_liquido))
View(agrupa_partido)
lista = c(19)
names(lista) = c ("PMDB")
lista
merge(agrupa_partido, lista)
bancada <- ler_gastos("dados/bancada.csv")
View(bancada)
merge(agrupa_partido, bancada)
partidos <- merge(agrupa_partido, bancada)
View(partidos)
View(partidos)
partidos <- partidos %>% summarise(media = total_cota/Numero)
partidos <- merge(agrupa_partido, bancada)
View(partidos)
ggplot(partidos, aes(x= Partido, y = total_cota/Numero)) + geom_bar(stat = "identity") + coord_flip() + ylab("Desvio") + xlab("Tipo de despesa")
ggplot(partidos, aes(x= Partido, y = total_cota)) + geom_bar(stat = "identity") + coord_flip() + ylab("Desvio") + xlab("Tipo de despesa")
unico <- gastos %>% filter(Partido == "PTdoB")
View(unico)
unico <- gastos %>% filter(Partido == "PTdoB") %>% group_by(Nome) %>% summarise(total = sum(Valor_liquido))
View(unico)
unico <- gastos %>% filter(Partido == "SD") %>% group_by(Nome) %>% summarise(total = sum(Valor_liquido))
unico <- gastos %>% filter(Partido == "PV") %>% group_by(Nome) %>% summarise(total = sum(Valor_liquido))
unico <- gastos %>% filter(Partido == "PTB") %>% group_by(Nome) %>% summarise(total = sum(Valor_liquido))
View(unico)
unico <- gastos  %>% group_by(Nome) %>% summarise(total = sum(Valor_liquido))
unico <- gastos %>% filter(Partido == "PTB") %>% group_by(Nome) %>% summarise(total = sum(Valor_liquido))
unico <- gastos %>% filter(Partido == "PT") %>% group_by(Nome) %>% summarise(total = sum(Valor_liquido))
length(unico)
nrow(unico)
unico <- gastos %>% filter(Partido == "PSDB") %>% group_by(Nome) %>% summarise(total = sum(Valor_liquido))
nrow(unico)
unico <- gastos %>% filter(Partido == "PSD") %>% group_by(Nome) %>% summarise(total = sum(Valor_liquido))
nrow(unico)
unico <- gastos %>% filter(Partido == "PSC") %>% group_by(Nome) %>% summarise(total = sum(Valor_liquido))
nrow(unico)
unico <- gastos %>% filter(Partido == "PSB") %>% group_by(Nome) %>% summarise(total = sum(Valor_liquido))
nrow(unico)
View(unico)
unico <- gastos %>% filter(Partido == "PROS") %>% group_by(Nome) %>% summarise(total = sum(Valor_liquido))
nrow(unico)
View(unico)
unico <- gastos %>% filter(Partido == "PRB") %>% group_by(Nome) %>% summarise(total = sum(Valor_liquido))
nrow(unico)
unico <- gastos %>% filter(Partido == "PR") %>% group_by(Nome) %>% summarise(total = sum(Valor_liquido))
nrow(unico)
unico <- gastos %>% filter(Partido == "PPS") %>% group_by(Nome) %>% summarise(total = sum(Valor_liquido))
nrow(unico)
unico <- gastos %>% filter(Partido == "PP") %>% group_by(Nome) %>% summarise(total = sum(Valor_liquido))
nrow(unico)
View(unico)
unico <- gastos %>% filter(Partido == "PMDB") %>% group_by(Nome) %>% summarise(total = sum(Valor_liquido))
nrow(unico)
unico <- gastos %>% filter(Partido == "PHS") %>% group_by(Nome) %>% summarise(total = sum(Valor_liquido))
nrow(unico)
unico <- gastos %>% filter(Partido == "PDT") %>% group_by(Nome) %>% summarise(total = sum(Valor_liquido))
unico <- gastos %>% filter(Partido == "PDT") %>% group_by(Nome) %>% summarise(total = sum(Valor_liquido))
nrow(unico)
unico <- gastos %>% filter(Partido == "PCdoB") %>% group_by(Nome) %>% summarise(total = sum(Valor_liquido))
nrow(unico)
unico <- gastos %>% filter(Partido == "DEM") %>% group_by(Nome) %>% summarise(total = sum(Valor_liquido))
nrow(unico)
#Carregando os arquivos dos gastos e das cotas por estado
ler_gastos <- function(arquivo){
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, encoding='UTF-8')
return(gastos)
}
gastos <- ler_gastos("dados/ano-atual.csv")
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
gastos <- gastos %>% select (1, 5, 6, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Tipo_despesa", "Valor_liquido")
bancada <- ler_gastos("dados/bancada.csv")
View(bancada)
ggplot(partidos, aes(x= Partido, y = total/Numero)) + geom_bar(stat = "identity") + coord_flip() + ylab("M√©dia de gasto por deputado") + xlab("Partido")
agrupa_partido <- gastos %>% group_by(Partido) %>% summarise(total = sum(Valor_liquido))
partidos <- merge(agrupa_partido, bancada)
ggplot(partidos, aes(x= Partido, y = total/Numero)) + geom_bar(stat = "identity") + coord_flip() + ylab("M√©dia de gasto por deputado") + xlab("Partido")
ggplot(partidos, aes(x= Partido, y = total/Numero)) + geom_bar(stat = "identity", colour = Partido) + coord_flip() + ylab("M√©dia de gasto por deputado") + xlab("Partido")
ggplot(partidos, aes(x= Partido, y = total/Numero)) + geom_bar(stat = "identity", colour = agrupa_partido$Partido) + coord_flip() + ylab("M√©dia de gasto por deputado") + xlab("Partido")
ggplot(partidos, aes(x= Partido, y = total/Numero)) + geom_bar(stat = "identity") + coord_flip() + ylab("M√©dia de gasto por deputado") + xlab("Partido")
ggplot(partidos, aes(x= Partido, y = total/Numero)) + geom_bar(stat = "identity", fill = Partido) + coord_flip() + ylab("M√©dia de gasto por deputado") + xlab("Partido")
ggplot(partidos, aes(x= Partido, y = total/Numero)) + geom_bar(stat = "identity", fill = partidos$Partido) + coord_flip() + ylab("M√©dia de gasto por deputado") + xlab("Partido")
ggplot(partidos, aes(x= Partido, y = total/Numero)) + geom_bar(stat = "identity", colour = partidos$Partido) + coord_flip() + ylab("M√©dia de gasto por deputado") + xlab("Partido")
ggplot(partidos, aes(x= Partido, y = total/Numero)) + geom_bar(stat = "identity") + coord_flip() + ylab("M√©dia de gasto por deputado") + xlab("Partido")
ggplot(partidos, aes(x= Partido, y = total/Numero), colour = Partido) + geom_bar(stat = "identity") + coord_flip() + ylab("M√©dia de gasto por deputado") + xlab("Partido")
ggplot(partidos, aes(x= Partido, y = total/Numero), colour = Partido) + geom_bar(stat = "identity") + coord_flip() + ylab("M√©dia de gasto por deputado") + xlab("Partido")
summary(partidos)
