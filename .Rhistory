#' C√É¬¢mara e seta os tipos de colunas mais convenientemente.
#' Vers√É¬£o sem readr, para m√É¬°quinas onde n√É¬£o √É¬© poss√É≠vel instalar esse pacote.
#' √É¬â um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, encoding="UTF-8")
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
# Foram observados especialmente os atributos Partido, Nome, Valor Solicitado, Descricao e o Valor Liquido, ou seja, o que de fato foi recebido pelo deputado.
gastos <- gastos %>% select (1, 5, 6, 8, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Valor_solicitado", "Descricao", "Valor_liquido")
gastos <- gastos %>% filter (UF == "PB")
# Pelo gr√É¬°fico de barras gerado, observa-se que os servicos mais requisitados pelos parlamentares sao PASSAGENS AEREAS e COMBUSTIVEIS/LUBRIFICANTES, mas nao necessariamente os maiores valores gastos sao com eles
ggplot(gastos) +
geom_bar(mapping = aes(x = Descricao)) + coord_flip()
agrupa_nome = gastos %>%
group_by(Nome) %>%
summarise(total = sum(Valor_liquido))
ggplot(agrupa_nome) +
geom_point(mapping = aes(x = Nome, y = total)) + coord_flip()
View(mean(agrupa_nome$total)) # Em media, quanto os deputados gastam?
ggplot(agrupa_nome) +
geom_histogram(mapping = aes(x = Descricao)) + coord_flip()
maior_valor = agrupa_nome %>% filter(total == max(total))
menor_valor = agrupa_nome %>% filter(total == min(total))
View(maior_valor) #deputado que mais gastou
View(menor_valor) #deputado que menos gastou
View(mean(gastos$Valor_liquido)) #O que cada deputado gasta em m√É¬©dia para cada servico solicitado
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
theme_set(theme_bw())
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
theme_set(theme_bw())
# carregando dados
ler_gastos <- function(arquivo = "C:/Users/Mafra/Documents/AD1/workspace/AD1/dados/ano-atual.csv"){
#' L√™ um csv criado a partir dos dados de gastos dos deputados da
#' C√¢mara e seta os tipos de colunas mais convenientemente.
#' Vers√£o sem readr, para m√°quinas onde n√£o √© poss√≠vel instalar esse pacote.
#' √â um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, comment.char="#")
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
# Foram observados especialmente os atributos Partido, Nome, Valor Solicitado, Descricao e o Valor Liquido, ou seja, o que de fato foi recebido pelo deputado.
gastos <- gastos %>% select (1, 5, 6, 8, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Valor_solicitado", "Descricao", "Valor_liquido")
gastos <- gastos %>% filter (UF == "PB")
# Pelo gr√°fico de barras gerado, observa-se que os servicos mais requisitados pelos parlamentares sao PASSAGENS AEREAS e COMBUSTIVEIS/LUBRIFICANTES, mas n√£o necessariamente os maiores valores gastos s√£o com eles
ggplot(gastos) +
geom_bar(mapping = aes(x = Descricao)) + coord_flip()
agrupa_nome = gastos %>%
group_by(Nome) %>%
summarise(total = sum(Valor_liquido))
ggplot(agrupa_nome) +
geom_point(mapping = aes(x = Nome, y = total)) + coord_flip()
View(mean(agrupa_nome$total)) # Em media, quanto os deputados gastam?
ggplot(agrupa_nome) +
geom_histogram(mapping = aes(x = Descricao)) + coord_flip()
maior_valor = agrupa_nome %>% filter(total == max(total))
menor_valor = agrupa_nome %>% filter(total == min(total))
View(maior_valor) #deputado que mais gastou
View(menor_valor) #deputado que menos gastou
View(mean(gastos$Valor_liquido)) #O que cada deputado gasta em m√©dia para cada servico solicitado
agrupa_nome = gastos %>%
group_by(Nome) %>%
summarise(total = sum(Valor_liquido))
ggplot(agrupa_nome) +
geom_point(mapping = aes(x = Nome, y = total)) + coord_flip()
View(mean(agrupa_nome$total)) # Em media, quanto os deputados gastam?
ggplot(agrupa_nome) +
geom_histogram(mapping = aes(x = Descricao)) + coord_flip()
maior_valor = agrupa_nome %>% filter(total == max(total))
menor_valor = agrupa_nome %>% filter(total == min(total))
View(maior_valor) #deputado que mais gastou
View(menor_valor) #deputado que menos gastou
View(mean(gastos$Valor_liquido)) #O que cada deputado gasta em m√©dia para cada servico solicitado
agrupa_nome = gastos %>%
group_by(Nome) %>%
summarise(total = sum(Valor_liquido))
ggplot(agrupa_nome) +
geom_point(mapping = aes(x = Nome, y = total)) + coord_flip()
View(mean(agrupa_nome$total)) # Em media, quanto os deputados gastam?
maior_valor = agrupa_nome %>% filter(total == max(total))
menor_valor = agrupa_nome %>% filter(total == min(total))
View(maior_valor) #deputado que mais gastou
View(menor_valor) #deputado que menos gastou
View(mean(gastos$Valor_liquido)) #O que cada deputado gasta em m√©dia para cada servico solicitado
agrupa_nome = gastos %>%
group_by(Nome) %>%
summarise(total = sum(Valor_liquido))
ggplot(agrupa_nome) +
geom_point(mapping = aes(x = Nome, y = total)) + coord_flip()
View(mean(agrupa_nome$total)) # Em media, quanto os deputados gastam?
maior_valor = agrupa_nome %>% filter(total == max(total))
menor_valor = agrupa_nome %>% filter(total == min(total))
View(maior_valor) #deputado que mais gastou
View(menor_valor) #deputado que menos gastou
View(mean(gastos$Valor_liquido)) #O que cada deputado gasta em m√©dia para cada servico solicitado
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
theme_set(theme_bw())
# carregando dados
ler_gastos <- function(arquivo = "C:/Users/Mafra/Documents/AD1/workspace/AD1/dados/ano-atual.csv"){
#' L√™ um csv criado a partir dos dados de gastos dos deputados da
#' C√¢mara e seta os tipos de colunas mais convenientemente.
#' Vers√£o sem readr, para m√°quinas onde n√£o √© poss√≠vel instalar esse pacote.
#' √â um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, comment.char="#")
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
# Foram observados especialmente os atributos Partido, Nome, Valor Solicitado, Descricao e o Valor Liquido, ou seja, o que de fato foi recebido pelo deputado.
gastos <- gastos %>% select (1, 5, 6, 8, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Valor_solicitado", "Descricao", "Valor_liquido")
gastos <- gastos %>% filter (UF == "PB")
# Foram observados especialmente os atributos Partido, Nome, Valor Solicitado, Descricao e o Valor Liquido, ou seja, o que de fato foi recebido pelo deputado.
gastos <- gastos %>% select (1, 5, 6, 8, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Valor_solicitado", "Descricao", "Valor_liquido")
gastos <- gastos %>% filter (UF == "PB")
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
theme_set(theme_bw())
# carregando dados
ler_gastos <- function(arquivo = "C:/Users/Mafra/Documents/AD1/workspace/AD1/dados/ano-atual.csv"){
#' L√™ um csv criado a partir dos dados de gastos dos deputados da
#' C√¢mara e seta os tipos de colunas mais convenientemente.
#' Vers√£o sem readr, para m√°quinas onde n√£o √© poss√≠vel instalar esse pacote.
#' √â um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, comment.char="#")
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
# Foram observados especialmente os atributos Partido, Nome, Valor Solicitado, Descricao e o Valor Liquido, ou seja, o que de fato foi recebido pelo deputado.
gastos <- gastos %>% select (1, 5, 6, 8, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Valor_solicitado", "Descricao", "Valor_liquido")
gastos <- gastos %>% filter (UF == "PB")
# Pelo gr√°fico de barras gerado, observa-se que os servicos mais requisitados pelos parlamentares sao PASSAGENS AEREAS e COMBUSTIVEIS/LUBRIFICANTES, mas n√£o necessariamente os maiores valores gastos s√£o com eles
ggplot(gastos) +
geom_bar(mapping = aes(x = Descricao)) + coord_flip()
# carregando dados
ler_gastos <- function(arquivo = "C:/Users/Mafra/Documents/AD1/workspace/AD1/dados/ano-atual.csv"){
#' L? um csv criado a partir dos dados de gastos dos deputados da
#' C?mara e seta os tipos de colunas mais convenientemente.
#' Vers?o sem readr, para m?quinas onde n?o ? poss?vel instalar esse pacote.
#' ? um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, comment.char="#")
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
theme_set(theme_bw())
# carregando dados
ler_gastos <- function(arquivo = "C:/Users/Mafra/Documents/AD1/workspace/AD1/dados/ano-atual.csv"){
#' L? um csv criado a partir dos dados de gastos dos deputados da
#' C?mara e seta os tipos de colunas mais convenientemente.
#' Vers?o sem readr, para m?quinas onde n?o ? poss?vel instalar esse pacote.
#' ? um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, comment.char="#")
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
# Foram observados especialmente os atributos Partido, Nome, Valor Solicitado, Descricao e o Valor Liquido, ou seja, o que de fato foi recebido pelo deputado.
gastos <- gastos %>% select (1, 5, 6, 8, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Valor_solicitado", "Descricao", "Valor_liquido")
gastos <- gastos %>% filter (UF == "PB")
# Pelo gr?fico de barras gerado, observa-se que os servicos mais requisitados pelos parlamentares sao PASSAGENS AEREAS e COMBUSTIVEIS/LUBRIFICANTES, mas n?o necessariamente os maiores valores gastos s?o com eles
ggplot(gastos) +
geom_bar(mapping = aes(x = Descricao)) + coord_flip()
agrupa_nome = gastos %>%
group_by(Nome) %>%
summarise(total = sum(Valor_liquido))
ggplot(agrupa_nome) +
geom_point(mapping = aes(x = Nome, y = total)) + coord_flip()
View(mean(agrupa_nome$total)) # Em media, quanto os deputados gastam?
maior_valor = agrupa_nome %>% filter(total == max(total))
menor_valor = agrupa_nome %>% filter(total == min(total))
View(maior_valor) #deputado que mais gastou
View(menor_valor) #deputado que menos gastou
View(mean(gastos$Valor_liquido)) #O que cada deputado gasta em m?dia para cada servico solicitado
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
theme_set(theme_bw())
# carregando dados
ler_gastos <- function(arquivo = "C:/Users/Mafra/Documents/AD1/workspace/AD1/dados/ano-atual.csv"){
#' L√™ um csv criado a partir dos dados de gastos dos deputados da
#' C√¢mara e seta os tipos de colunas mais convenientemente.
#' Vers√£o sem readr, para m√°quinas onde n√£o √© poss√≠vel instalar esse pacote.
#' √â um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, encoding="UTF-8")
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
theme_set(theme_bw())
# carregando dados
ler_gastos <- function(arquivo = "C:/Users/Mafra/Documents/AD1/workspace/AD1/dados/ano-atual.csv"){
#' L√™ um csv criado a partir dos dados de gastos dos deputados da
#' C√¢mara e seta os tipos de colunas mais convenientemente.
#' Vers√£o sem readr, para m√°quinas onde n√£o √© poss√≠vel instalar esse pacote.
#' √â um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, encoding='UTF-8')
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
# Foram observados especialmente os atributos Partido, Nome, Valor Solicitado, Descricao e o Valor Liquido, ou seja, o que de fato foi recebido pelo deputado.
gastos <- gastos %>% select (1, 5, 6, 8, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Valor_solicitado", "Descricao", "Valor_liquido")
gastos <- gastos %>% filter (UF == "PB")
# Pelo gr√°fico de barras gerado, observa-se que os servicos mais requisitados pelos parlamentares sao PASSAGENS AEREAS e COMBUSTIVEIS/LUBRIFICANTES, mas n√£o necessariamente os maiores valores gastos s√£o com eles
ggplot(gastos) +
geom_bar(mapping = aes(x = Descricao)) + coord_flip()
agrupa_nome = gastos %>%
group_by(Nome) %>%
summarise(total = sum(Valor_liquido))
ggplot(agrupa_nome) +
geom_point(mapping = aes(x = Nome, y = total)) + coord_flip()
View(mean(agrupa_nome$total)) # Em media, quanto os deputados gastam?
maior_valor = agrupa_nome %>% filter(total == max(total))
menor_valor = agrupa_nome %>% filter(total == min(total))
View(maior_valor) #deputado que mais gastou
View(menor_valor) #deputado que menos gastou
View(mean(gastos$Valor_liquido)) #O que cada deputado gasta em m√©dia para cada servico solicitado
ggplot(agrupa_nome, mapping = aes(x = 1, y = total_gasto)) + geom_boxplot() + geom_point( aes(color=factor(Nome)), position=position_dodge(width=0.75) ) + labs(x='--', y='Valor gasto', color = "Deputados")
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
library(knitr)
theme_set(theme_bw())
ler_gastos <- function(arquivo = "dados/ano-atual.csv"){
#' L√™ um csv criado a partir dos dados de gastos dos deputados da
#' C√¢mara e seta os tipos de colunas mais convenientemente.
#' Vers√£o sem readr, para m√°quinas onde n√£o √© poss√≠vel instalar esse pacote.
#' √â um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, encoding='UTF-8')
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
gastos <- gastos %>% select (1, 5, 6, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Descricao", "Valor_liquido")
gastos_pb <- gastos %>% filter (UF == "PB")
setwd("~/AD1/workspace/AD1")
ler_gastos <- function(arquivo = "dados/ano-atual.csv"){
#' L√™ um csv criado a partir dos dados de gastos dos deputados da
#' C√¢mara e seta os tipos de colunas mais convenientemente.
#' Vers√£o sem readr, para m√°quinas onde n√£o √© poss√≠vel instalar esse pacote.
#' √â um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, encoding='UTF-8')
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
gastos <- gastos %>% select (1, 5, 6, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Descricao", "Valor_liquido")
gastos_pb <- gastos %>% filter (UF == "PB")
summary(gastos_pb $ Valor_liquido)
agrupa_nome = gastos_pb %>%
group_by(Nome) %>%
summarise(total_gasto = sum(Valor_liquido))
summary(agrupa_nome$total_gasto)
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank())
ggplot(agrupa_nome, aes(x = Nome, y = total_gasto)) + geom_point() + coord_flip()
ggplot(agrupa_nome, mapping = aes(x = total_gasto, y = total_gasto)) +  geom_boxplot() + geom_point(aes(color=factor(Nome)),               position=position_dodge(width=0.75))
ggplot(agrupa_nome, mapping = aes(x = 1, y = total_gasto)) + geom_boxplot() + geom_point( aes(color=factor(Nome)), position=position_dodge(width=0.75) ) + labs(x='--', y='Valor gasto', color = "Deputados")
ggplot(agrupa_nome, mapping = aes(x = 1, y = total_gasto)) + geom_boxplot() + geom_point( aes(color=factor(Nome)), position=position_dodge(width=0.75) ) + labs(x='--', y='Valor gasto')
ggplot(agrupa_nome, mapping = aes(x = 1, y = total_gasto)) + geom_boxplot() + geom_point(position=position_dodge(width=0.75) ) + labs(x='--', y='Valor gasto')
ggplot(agrupa_nome, aes(x = Nome, y = total_gasto)) + geom_point() + coord_flip()
ggplot(agrupa_nome, mapping = aes(x = 1, y = total_gasto)) + geom_boxplot() + geom_point(position=position_dodge(width=0.75) ) + labs(x='--', y='Valor gasto')
median(agrupa_nome$total_gasto)
ggplot(agrupa_nome, aes(x = Nome, y = total_gasto)) + geom_point(colour = gastos_pb$Partido) + coord_flip()
ggplot(agrupa_nome) +
geom_histogram(mapping = aes(x = total_gasto),
fill = "white",
colour = "black",
breaks = c(40000, 100000, 150000, 200000, 250000))
ggplot(agrupa_nome) +
geom_histogram(mapping = aes(x = total_gasto),
fill = "white",
colour = "black",
breaks = c(0, 45000, 90000, 135000, 180000, 225000, 27000)) + ylab("Total gasto")
ggplot(agrupa_nome) +
geom_histogram(mapping = aes(x = total_gasto),
fill = "white",
colour = "black",
breaks = c(0, 50000, 100000, 150000, 200000, 250000)) + ylab("Total gasto")
ggplot(agrupa_nome) +
geom_histogram(mapping = aes(x = total_gasto),
fill = "white",
colour = "black",
breaks = c(0, 50000, 100000, 150000, 200000, 250000)) + ylab("Total gasto")
ggplot(agrupa_nome, aes(x = Nome, y = total_gasto)) + geom_point(colour = gastos_pb$Partido) + coord_flip()
ggplot(agrupa_nome) +
geom_histogram(mapping = aes(x = total_gasto),
fill = "white",
colour = "black",
breaks = c(0, 50000, 100000, 150000, 200000, 250000)) + xlab("Total gasto")
ggplot(data = agrupa_nome) +
geom_point(mapping = aes(x = Nome,
y = total_gasto,
colour = partido),
alpha = 0.7)
agrupa_nome = gastos_pb %>%
group_by(Nome) %>%
summarise(total_gasto = sum(Valor_liquido), partido = gastos_pb$Partido)
summary(agrupa_nome$total_gasto)
ggplot(data = agrupa_nome) +
geom_point(mapping = aes(x = Nome,
y = total_gasto,
colour = partido),
alpha = 0.7)
ggplot(agrupa_nome) +
geom_histogram(mapping = aes(x = total_gasto),
fill = "white",
colour = "black",
breaks = c(0, 50000, 100000, 150000, 200000, 250000)) + xlab("Total gasto")
ggplot(data = agrupa_nome) +
geom_point(mapping = aes(x = Nome,
y = total_gasto,
colour = partido),
alpha = 0.7)
agrupa_nome = gastos_pb %>%
group_by(Nome) %>%
summarise(total_gasto = sum(Valor_liquido), partido = Partido)
summary(agrupa_nome$total_gasto)
ggplot(data = agrupa_nome) +
geom_point(mapping = aes(x = Nome,
y = total_gasto,
colour = ),
alpha = 0.7)
ggplot(data = agrupa_nome) +
geom_point(mapping = aes(x = Nome,
y = total_gasto,
colour = partido),
alpha = 0.7)
agrupa_nome = gastos_pb %>%
group_by(Nome) %>%
summarise(total_gasto = sum(Valor_liquido))
summary(agrupa_nome$total_gasto)
ggplot(data = agrupa_nome) +
geom_point(mapping = aes(x = Nome,
y = total_gasto,
colour = partido),
alpha = 0.7)
ggplot(agrupa_nome) +
geom_histogram(mapping = aes(x = total_gasto),
fill = "white",
colour = "black",
breaks = c(0, 50000, 100000, 150000, 200000, 250000)) + xlab("Total gasto")
ggplot(data = agrupa_nome) +
geom_point(mapping = aes(x = Nome,
y = total_gasto,
colour = partido),
alpha = 0.7)
ggplot(data = agrupa_nome) +
geom_point(mapping = aes(x = Nome,
y = total_gasto),
alpha = 0.7)
ggplot(data = agrupa_nome) +
geom_point(mapping = aes(x = Nome,
y = total_gasto),
alpha = 0.7) + coord_flip()
ggplot(data = agrupa_nome) +
geom_point(mapping = aes(x = Nome,
y = total_gasto),
alpha = 0.9) + coord_flip()
ggplot(agrupa_nome) +
geom_histogram(mapping = aes(x = total_gasto),
fill = "white",
colour = "black",
breaks = c(0, 50000, 100000, 150000, 200000, 250000)) + xlab("Total gasto")
ggplot(data = agrupa_nome) +
geom_point(mapping = aes(x = Nome,
y = total_gasto),
alpha = 0.9) + coord_flip()
ggplot(agrupa_nome) +
geom_histogram(mapping = aes(x = total_gasto),
fill = "white",
colour = "black",
breaks = c(0, 50000, 100000, 150000, 200000, 250000)) + xlab("Total gasto") + ylab("N√∫mero de deputados")
ggplot(agrupa_nome, mapping = aes(x = 1, y = total_gasto)) + geom_boxplot() + geom_point(position=position_dodge(width=0.75) ) + labs(x='', y='Valor gasto')
summary(gastos_pb $ Valor_liquido)
summary(agrupa_nome$total_gasto)
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank())
ggplot(agrupa_nome, aes(x= Nome, reorder(y = total_gasto)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank())
ggplot(agrupa_nome, aes(x= Nome, reorder(y = total_gasto)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank())
ggplot(agrupa_nome, aes(x= Nome, y = reorder(total_gasto), -1) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + xlab("Nome do deputado") + ylab("Total Gasto")
ggplot(agrupa_nome, aes(x= Nome, y = reorder(total_gasto) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + xlab("Nome do deputado") + ylab("Total Gasto")
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + xlab("Nome do deputado") + ylab("Total Gasto")
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + xlab("Nome do deputado") + ylab("Total Gasto")
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "identity") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + xlab("Nome do deputado") + ylab("Total Gasto")
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "identity", stat = "summary", fun.y = "mean") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + xlab("Nome do deputado") + ylab("Total Gasto")
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "identity", stat = "summary", fun.y = "mean") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + xlab("Nome do deputado") + ylab("Total Gasto")
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "summary", fun.y = "mean") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + xlab("Nome do deputado") + ylab("Total Gasto")
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "summary", fun.y = "mean") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + xlab("Nome do deputado") + ylab("Total Gasto")
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "summary", fun.y = "mean") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + xlab("Nome do deputado") + ylab("Total Gasto") + geom_abline(mean(total_gastos))
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "summary", fun.y = "mean") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + xlab("Nome do deputado") + ylab("Total Gasto") + geom_abline(mean(total_gasto))
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "summary", fun.y = "mean") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + xlab("Nome do deputado") + ylab("Total Gasto") + geom_abline(mean(agrupa_nome$total_gasto))
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "summary", fun.y = "mean") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + xlab("Nome do deputado") + ylab("Total Gasto") + geom_abline(aes(y = mean(agrupa_nome$total_gasto)))
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "summary", fun.y = "mean") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + xlab("Nome do deputado") + ylab("Total Gasto") + geom_abline(aes(y = mean(agrupa_nome$total_gasto)), (intercept = 0, slope = 1)
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "summary", fun.y = "mean") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + xlab("Nome do deputado") + ylab("Total Gasto") + geom_abline(aes(y = mean(agrupa_nome$total_gasto)),intercept = 0, slope = 1)
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "summary", fun.y = "mean") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + xlab("Nome do deputado") + ylab("Total Gasto") + geom_abline(aes(y = mean(agrupa_nome$total_gasto)),intercept = 0, slope = 1, colour = "red")
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "summary", fun.y = "mean") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + xlab("Nome do deputado") + ylab("Total Gasto") + geom_abline(intercept = mean(agrupa_nome$total_gasto), slope = 1, colour = "red")
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "summary", fun.y = "mean") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + xlab("Nome do deputado") + ylab("Total Gasto") + geom_abline(intercept = mean(agrupa_nome$total_gasto), slope = 5, colour = "red")
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "summary", fun.y = "mean") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + xlab("Nome do deputado") + ylab("Total Gasto") + geom_abline(intercept = mean(agrupa_nome$total_gasto), slope = 5, colour = "red")
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "summary", fun.y = "mean") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + xlab("Nome do deputado") + ylab("Total Gasto") + geom_abline(intercept = mean(agrupa_nome$total_gasto), slope = 5, colour = "red") + geom_abline(intercept = median(agrupa_nome$total_gasto), slope = 5, colour = "blue")
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "summary", fun.y = "mean") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + xlab("Nome do deputado") + ylab("Total Gasto") + geom_abline(intercept = mean(agrupa_nome$total_gasto), slope = 5, colour = "red") + geom_abline(intercept = median, (agrupa_nome$total_gasto), slope = 5, colour = "blue")
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "summary", fun.y = "mean") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + xlab("Nome do deputado") + ylab("Total Gasto") + geom_abline(intercept = mean(agrupa_nome$total_gasto), slope = 5, colour = "red") + geom_abline(intercept = median, (agrupa_nome$total_gasto), slope = 5, colour = "blue"))
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "summary", fun.y = "mean") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + xlab("Nome do deputado") + ylab("Total Gasto") +
geom_abline(intercept = mean(agrupa_nome$total_gasto), slope = 5, colour = "red") +
geom_abline(intercept = median(agrupa_nome$total_gasto), slope = 5, colour = "blue")
min(agrupa_nome$total_gasto)
max(agrupa_nome$total_gasto)
ggplot(gastos_pb) +
geom_bar(mapping = aes(x = Descricao)) + coord_flip()
Os deputados gastam em m√©dia, R$ 162 900, e a mediana √© aproximadamente R$ 168 400, valores n√£o t√£o distantes quando leva-se em conta a ordem de grandeza dos valores envolvidos. O mesmo gr√°fico mostra essas linhas, com a m√©dia em vermelho e a mediana em azul.
library(dplyr, warn.conflicts = FALSE)
library(ggplot2)
library(knitr)
theme_set(theme_bw())
ler_gastos <- function(arquivo = "dados/ano-atual.csv"){
#' L√™ um csv criado a partir dos dados de gastos dos deputados da
#' C√¢mara e seta os tipos de colunas mais convenientemente.
#' Vers√£o sem readr, para m√°quinas onde n√£o √© poss√≠vel instalar esse pacote.
#' √â um pouco mais lenta que a com readr.
require("dplyr", warn.conflicts = FALSE)
gastos = read.csv(arquivo, stringsAsFactors = FALSE, encoding='UTF-8')
gastos = gastos %>%
mutate_each(funs(as.factor), sgPartido, sgUF, txNomeParlamentar, indTipoDocumento)
return(gastos)
}
gastos <- ler_gastos()
gastos <- gastos %>% select (1, 5, 6, 15, 23)
names(gastos) <- c("Partido", "Nome", "UF", "Descricao", "Valor_liquido")
gastos_pb <- gastos %>% filter (UF == "PB")
summary(gastos_pb $ Valor_liquido)
agrupa_nome = gastos_pb %>%
group_by(Nome) %>%
summarise(total_gasto = sum(Valor_liquido))
summary(agrupa_nome$total_gasto)
ggplot(agrupa_nome, aes(x= Nome, y = total_gasto)) + geom_bar(stat = "summary", fun.y = "mean") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + xlab("Nome do deputado") + ylab("Total Gasto") +
geom_abline(intercept = mean(agrupa_nome$total_gasto), slope = 5, colour = "red") +
geom_abline(intercept = median(agrupa_nome$total_gasto), slope = 5, colour = "blue")
ggplot(data = agrupa_nome) +
geom_point(mapping = aes(x = Nome,
y = total_gasto),
alpha = 0.9) + coord_flip()
ggplot(agrupa_nome) +
geom_histogram(mapping = aes(x = total_gasto),
fill = "white",
colour = "black",
breaks = c(0, 50000, 100000, 150000, 200000, 250000)) + xlab("Total gasto") + ylab("N√∫mero de deputados")
ggplot(data = agrupa_nome) +
geom_point(mapping = aes(x = Nome,
y = total_gasto),
alpha = 0.9) + coord_flip()
ggplot(agrupa_nome) +
geom_histogram(mapping = aes(x = total_gasto),
fill = "white",
colour = "black",
breaks = c(0, 50000, 100000, 150000, 200000, 250000)) + xlab("Total gasto") + ylab("N√∫mero de deputados")
ggplot(agrupa_nome, mapping = aes(x = 1, y = total_gasto)) + geom_boxplot() + geom_point(position=position_dodge(width=0.75) ) + labs(x='', y='Valor gasto')
agrupa_categoria = gastos_pb %>%
group_by(Descricao) %>%
summarise(total_gasto = sum(Valor_liquido))
ggplot(agrupa_categoria, aes(x= Descricao, y = total_gasto)) + geom_bar(stat = "identity") + coord_flip() + ylab("Total gasto") + xlab("Tipo de despesa")
agrupa_categoria = gastos_pb %>%
group_by(Descricao) %>%
summarise(desvio_padrao = sd(Valor_liquido))
ggplot(agrupa_categoria, aes(x= Descricao, y = desvio_padrao)) + geom_bar(stat = "identity") + coord_flip() + ylab("Desvio") + xlab("Tipo de despesa")
agrupa_categoria = gastos_pb %>%
group_by(Descricao) %>%
summarise(desvio_padrao = sd(Valor_liquido))
ggplot(agrupa_categoria, aes(x= Descricao, y = desvio_padrao)) + geom_bar(stat = "identity") + coord_flip() + ylab("Desvio") + xlab("Tipo de despesa")
atividade_parlamentar <- gastos_pb %>% filter(Descricao == "DIVULGA√á√ÉO DA ATIVIDADE PARLAMENTAR.")
summary(atividade_parlamentar$Valor_liquido)
ggplot(atividade_parlamentar, aes(x = Nome, y = atividade_parlamentar$Valor_liquido)) + geom_point() + coord_flip()  + ylab("Valor gasto") + xlab("Deputado")
agrupa_categoria = gastos_pb %>%
group_by(Descricao) %>%
summarise(total_gasto = sum(Valor_liquido))
ggplot(agrupa_categoria, aes(x= Descricao, y = total_gasto)) + geom_bar(stat = "identity") + coord_flip() + ylab("Total gasto") + xlab("Tipo de despesa")
max(agrupa_categoria$total_gasto)
agrupa_partido = gastos_pb %>% group_by(Partido) %>% summarise(total = sum(Valor_liquido))
ggplot(agrupa_partido, aes(x= Partido, y = total)) + geom_bar(stat = "summary", fun.y = "mean") + theme(axis.text.x = element_text(angle = 45, hjust = 1), panel.background=element_blank()) + xlab("Nome do deputado") + ylab("Total Gasto")
